name: Products
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all products (paginated).'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: asodkaso1923ala441qisjdas4
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": [], "links": {}, "meta": {}}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status": false, "message": "Error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 6g43cv8PD1aE5beadkZfhV6
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{code}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific product by code.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: asodkaso1923ala441qisjdas4
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: 'The product code.'
        required: true
        example: '12345'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      code: '12345'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"code": 12345, "product_name": "Example Product"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status": false, "message": "Product not found."}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status": false, "message": "Error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 6g43cv8PD1aE5beadkZfhV6
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{code}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Soft delete a product by changing its status to "trash".'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: asodkaso1923ala441qisjdas4
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: 'The product code.'
        required: true
        example: '12345'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      code: '12345'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status": true, "message": "Product has been changed the status for ''trash''"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status": false, "message": "Product not found."}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status": false, "message": "Error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 6g43cv8PD1aE5beadkZfhV6
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/products/{code}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a product by code.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: asodkaso1923ala441qisjdas4
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      code: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'The code of the product.'
        required: true
        example: '"Example code"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the product.'
        required: true
        example: '"Example status"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      imported_t:
        name: imported_t
        description: 'The imported_t of the product.'
        required: true
        example: '"Example imported_t"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      url:
        name: url
        description: 'The url of the product.'
        required: true
        example: '"Example url"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      creator:
        name: creator
        description: 'The creator of the product.'
        required: true
        example: '"Example creator"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      created_t:
        name: created_t
        description: 'The created_t of the product.'
        required: true
        example: '"Example created_t"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      last_modified_t:
        name: last_modified_t
        description: 'The last_modified_t of the product.'
        required: true
        example: '"Example last_modified_t"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_name:
        name: product_name
        description: 'The product_name of the product.'
        required: true
        example: '"Example product_name"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'The quantity of the product.'
        required: true
        example: '"Example quantity"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brands:
        name: brands
        description: 'The brands of the product.'
        required: true
        example: '"Example brands"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      categories:
        name: categories
        description: 'The categories of the product.'
        required: true
        example: '"Example categories"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      labels:
        name: labels
        description: 'The labels of the product.'
        required: true
        example: '"Example labels"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      cities:
        name: cities
        description: 'The cities of the product.'
        required: true
        example: '"Example cities"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      purchase_places:
        name: purchase_places
        description: 'The purchase_places of the product.'
        required: true
        example: '"Example purchase_places"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stores:
        name: stores
        description: 'The stores of the product.'
        required: true
        example: '"Example stores"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ingredients_text:
        name: ingredients_text
        description: 'The ingredients_text of the product.'
        required: true
        example: '"Example ingredients_text"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      traces:
        name: traces
        description: 'The traces of the product.'
        required: true
        example: '"Example traces"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      serving_size:
        name: serving_size
        description: 'The serving_size of the product.'
        required: true
        example: '"Example serving_size"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      serving_quantity:
        name: serving_quantity
        description: 'The serving_quantity of the product.'
        required: true
        example: '"Example serving_quantity"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      nutriscore_score:
        name: nutriscore_score
        description: 'The nutriscore_score of the product.'
        required: true
        example: '"Example nutriscore_score"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      nutriscore_grade:
        name: nutriscore_grade
        description: 'The nutriscore_grade of the product.'
        required: true
        example: '"Example nutriscore_grade"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      main_category:
        name: main_category
        description: 'The main_category of the product.'
        required: true
        example: '"Example main_category"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image_url:
        name: image_url
        description: 'The image_url of the product.'
        required: true
        example: '"Example image_url"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      code: '"Example code"'
      status: '"Example status"'
      imported_t: '"Example imported_t"'
      url: '"Example url"'
      creator: '"Example creator"'
      created_t: '"Example created_t"'
      last_modified_t: '"Example last_modified_t"'
      product_name: '"Example product_name"'
      quantity: '"Example quantity"'
      brands: '"Example brands"'
      categories: '"Example categories"'
      labels: '"Example labels"'
      cities: '"Example cities"'
      purchase_places: '"Example purchase_places"'
      stores: '"Example stores"'
      ingredients_text: '"Example ingredients_text"'
      traces: '"Example traces"'
      serving_size: '"Example serving_size"'
      serving_quantity: '"Example serving_quantity"'
      nutriscore_score: '"Example nutriscore_score"'
      nutriscore_grade: '"Example nutriscore_grade"'
      main_category: '"Example main_category"'
      image_url: '"Example image_url"'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status": true, "message": "Product has been updated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status": false, "message": "Product not found."}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status": false, "message": "Error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 6g43cv8PD1aE5beadkZfhV6
    controller: null
    method: null
    route: null
    custom: []
